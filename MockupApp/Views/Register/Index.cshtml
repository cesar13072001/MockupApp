
@{
    Layout = "~/Views/Shared/_Auth.cshtml";
}








<div class="col-lg-5 d-none d-sm-none d-md-block d-md-none d-lg-block">
    <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/img1.webp"
         alt="login form" class="img-fluid h-100" style="border-radius: 1rem 0 0 1rem;" />
</div>
<div class="col-md-12 col-lg-7 d-flex align-items-center">
    <div class="card-body p-4 p-lg-5 text-black">

        <form class="needs-validation" id="formularioRegistro" novalidate action="javascript:mandarFormulario()">

            <div class="d-flex align-items-center mb-3 pb-1">
               
                <span class="h1 fw-bold mb-0"><i><img src="~/favicon.ico" /></i> Child Story</span>
            </div>

            <h5 class="fw-normal mb-3 pb-3" style="letter-spacing: 1px;">Registrate para comprar</h5>
            <div class="row">
                <div class="form-outline mb-3 col-12 col-md-6">
                    <label class="form-label" for="txtNombres">Nombre</label>
                    <input type="text" id="txtNombres" class="form-control form-control-lg" required />
                    <div class="invalid-feedback">
                        Ingrese sus nombres
                    </div>
                </div>

                <div class="form-outline mb-3 col-12 col-md-6">
                    <label class="form-label" for="txtApellidos">Apellido</label>
                    <input type="text" id="txtApellidos" class="form-control form-control-lg" required />
                    <div class="invalid-feedback">
                        Ingrese sus apellidos
                    </div>
                </div>

                <div class="form-outline mb-3 col-12">
                    <label class="form-label" for="txtCorreo" >Correo</label>
                    <input type="email" id="txtCorreo" class="form-control form-control-lg" onblur="verificarCorreo()" required />
                    <div class="invalid-feedback">
                        Ingrese su correo
                    </div>
                </div>

                <div class="form-outline mb-3 col-12">
                    <label class="form-label" for="txtContrasenia">Contraseña</label>
                    <input type="password" id="txtContrasenia" class="form-control form-control-lg" required/>
                    <div class="invalid-feedback">
                        Ingrese una contraseña
                    </div>
                </div>



                <div class="pt-1 mb-3 col-12">
                    <button class="btn btn-dark btn-lg btn-block w-100" type="submit">Registrar</button>
                </div>

            </div>

            <p class="mb-5 pb-lg-2 text-center" style="color: #393f81;">
                ¿Tienes una cuenta? <a href="@Url.Action("","login")"
                                       style="color: #393f81;">Iniciar sesión</a>
            </p>
        </form>

    </div>





</div>




@section scripts{
    <script>


        function mandarFormulario() {
            var usuario = {
                nombres: $("#txtNombres").val(),
                apellidos: $("#txtApellidos").val(),
                correo: $("#txtCorreo").val(),
                contrasenia: $("#txtContrasenia").val(),
            }

             jQuery.ajax({
                //Establecemos el url como el JSONResult de nuestro
                //Controlador
                url: '@Url.Action("GuardarUsuario", "Register")',
                //Indicamos que tipo de peticion es
                type: "POST",
                data: JSON.stringify({ usuario: usuario }),
                //Indicamos el tipo de dato a traer
                dataType: "json",
                //Indicamos el tipo de contenido asi como el charset
                contentType: "application/json; charset=utf-8",
                //acciones a tomar cuando la data es traida de manera correcta
                success: function (data) {
                   

                    document.getElementById("mensajeAlerta").innerHTML = "Cuenta creada correctamente";
                    $("#liveToast").show();

                    

                    setTimeout(() => {
                        $("#liveToast").hide();                      
                        
                        window.location.replace("/login");
                        
                    }, 1000);

                },
                error: function (error) {
                    document.getElementById("mensajeAlerta").innerHTML = "El correo ya se encuentra registrado";
                    $("#liveToast").show();



                    setTimeout(() => {
                        $("#liveToast").hide();

                    }, 3000);
                },
                beforeSend: function () {

                }
        });
        }



        function verificarCorreo() {

             jQuery.ajax({
                //Establecemos el url como el JSONResult de nuestro
                //Controlador
                url: '@Url.Action("VerificadorCorreo", "Register")',
                //Indicamos que tipo de peticion es
                type: "POST",
                data: JSON.stringify({ email: $("#txtCorreo").val() }),
                //Indicamos el tipo de dato a traer
                dataType: "json",
                //Indicamos el tipo de contenido asi como el charset
                contentType: "application/json; charset=utf-8",
                //acciones a tomar cuando la data es traida de manera correcta
                success: function (data) {

                   
                },
                 error: function (error) {
                     console.log(error.responseJSON);
                     document.getElementById("mensajeAlerta").innerHTML = error.responseJSON;
                    $("#liveToast").show();

                    setTimeout(() => {
                        $("#liveToast").hide();
                    }, 5000);

                },
                beforeSend: function () {

                }
        });
        }










        // Example starter JavaScript for disabling form submissions if there are invalid fields
        (() => {
            'use strict'

            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            const forms = document.querySelectorAll('.needs-validation')

            // Loop over them and prevent submission
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }

                    form.classList.add('was-validated')
                }, false)
            })
        })()
    </script>

}




